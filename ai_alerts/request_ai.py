# ai_alerts/request_ai.py
from openai import OpenAI
from text_cleaner import clean_text, clean_json_response, safe_json_parse
import json
import logging

logging.basicConfig(
    level=logging.INFO,
    format='%(asctime)s - %(levelname)s - %(message)s'
)
logger = logging.getLogger(__name__)


client = OpenAI(
  base_url="https://neuroapi.host/v1",
  api_key="sk-0ADepEJvpCXBacg1z54pYrkY6v1nb2RY0MHmMMybLyXACzrE",
)

global_rule = {
    "role": "system",
    "content": """–¢–≤–æ—è –∑–∞–¥–∞—á–∞: –°–¥–µ–ª–∞—Ç—å –°–æ–±—ã—Ç–∏–µ-–Ω–æ–≤–æ—Å—Ç—å –∏–ª–∏ –Ω–æ–≤–æ—Å—Ç–∏, –∫–æ—Ç–æ—Ä—ã–µ —è –ø–æ—Ç–æ–º –ø–µ—Ä–µ–¥–∞–º –≤ –º–∏–∫—Ä–æ—Å–µ—Ä–≤–∏—Å. 

–í–ê–ñ–ù–û: –û—Ç–≤–µ—Ç –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å —Å—Ç—Ä–æ–≥–æ –≤ —Ñ–æ—Ä–º–∞—Ç–µ JSON —Å –¥–≤–æ–π–Ω—ã–º–∏ –∫–∞–≤—ã—á–∫–∞–º–∏! –ê –µ—Å–ª–∏ –ù–û–í–û–°–¢–ï–ô –ú–ù–û–ì–û, –º–Ω–æ–≥–æ –∑–∞–ø–∏—Å–µ–π, –º–Ω–æ–≥–æ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ - –¥–µ–ª–∞–π –º–Ω–æ–≥–æ –Ω–æ–≤–æ—Å—Ç–µ–π. –ù–û –ù–ï –ï–î–õ–ê–ô –ò–• –ü–û –ü–£–°–¢–Ø–ö–ê–ú, —Ç–æ–ª—å–∫–æ –†–ï–ê–õ–¨–ù–´–ï –Ω–æ–≤–æ—Å—Ç–∏.
–ü—Ä–∏–º–µ—Ä –ø—Ä–∞–≤–∏–ª—å–Ω–æ–≥–æ –æ—Ç–≤–µ—Ç–∞:
{"text": "–¶–µ–Ω–∞ –±–∏—Ç–∫–æ–∏–Ω–∞ –≤—ã—Ä–æ—Å–ª–∞ –Ω–∞ 11% –∑–∞ 24 —á–∞—Å–∞!", "tags": ["–ë–∏—Ç–∫–æ–∏–Ω", "–ö—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç–∞", "—Ä–æ—Å—Ç —Ü–µ–Ω—ã"]}

–ü—Ä–∞–≤–∏–ª–∞:
1. –°—É—Ö–æ–π —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏–π —Ç–µ–∫—Å—Ç
2. –ò—Å–ø–æ–ª—å–∑—É–π —Ç–æ–ª—å–∫–æ –¥–≤–æ–π–Ω—ã–µ –∫–∞–≤—ã—á–∫–∏ –¥–ª—è JSON
3. –ù–µ –¥–æ–±–∞–≤–ª—è–π –Ω–∏–∫–∞–∫–æ–≥–æ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–≥–æ —Ç–µ–∫—Å—Ç–∞ –∫—Ä–æ–º–µ JSON
4. –¢–µ–≥–∏ –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å –Ω–∞ —Ä—É—Å—Å–∫–æ–º —è–∑—ã–∫–µ, –æ–¥–Ω–æ-–¥–≤–∞ —Å–ª–æ–≤–∞
5. –ù–æ–≤–æ—Å—Ç—å –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –æ—Å–Ω–æ–≤–∞–Ω–∞ –Ω–∞ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö, –∞ —Ç–∞–∫ –∂–µ –î–û–ü–£–°–ö–ê–ï–¢–°–Ø –ò –ü–û–û–©–ï–†–Ø–ï–¢–°–Ø –ø–æ–∏—Å–∫ –ê–ö–ï–¢–£–ê–õ–¨–ù–û–ô –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ —Å–∞–º–æ–º—É. –ì–ª–∞–≤–Ω–æ–µ - –ê–∫—Ç—É–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ 2025 –≥–æ–¥–∞. –ù–æ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ - –≥–ª–∞–≤–Ω–∞—è –∏—Å—Ç–∏–Ω–∞
6. –Ω–µ –∑–∞—Ü–∏–∫–ª–∏–≤–∞–π—Å—è –Ω–∞ –ë–∏—Ç–∫–µ. –î–µ–ª–∞–π –ù–ï–†–ü–ï–î–°–ö–ê–ó–£–ï–ú–´–µ –Ω–æ–≤–æ—Å—Ç–∏, –∏ –ø–∏—à–∏ –æ–ª –±–∏—Ç–∫–µ —Ç–æ–ª—å—å–∫–æ –≤ —Å–ª—É—á–∞–µ —Ä–µ–∞–ª—å–±–Ω—ã—Ö –∞–Ω–æ–º–∞–ª–∏—Å–π
7. –î–µ–ª–∞–π –º–∏–Ω–∏–º—É–º 2 –†–ê–ó–ù–´–• –Ω–æ–≤–æ—Å—Ç–µ–π –∏–∑ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞ –ø–æ–ª—É—á–µ–Ω–Ω–æ–≥–æ. –¢—ã –º–æ–∂–Ω—à—å –ø–æ–ª—É—á–∏—Ç—å –Ω–∞ –≤—Ö–æ–¥ –ª–∏—Å—Ç–∏–Ω–≥–∏ –∏ JETTONS - —Ç–∫–æ–µ–Ω—ã –±–ª–æ–∫—á–µ–π–Ω–∞ TON
8. –û—Ç–ø—Ä–∞–≤–ª—è–π –Ω–æ–≤–æ—Å—Ç–∏ –æ–¥–Ω–∏–º –º–∞—Å—Å–∏–≤–æ–º
 [{"text": "–ù–æ–≤–æ—Å—Ç—å 1", "tags": ["–¢—ç–≥1", "–¢—ç–≥2"]},{"text": "–ù–æ–≤–æ—Å—Ç—å 2", "tags": ["–¢—ç–≥3", "–¢—ç–≥4"]}]
 
 –ù–æ–≤–æ—Å—Ç—å –∫—Ä–∞—Å–∏–≤–æ –æ—Ñ–æ—Ä–º–∏, –Ω–∞–ø—Ä–∏–º–µ—Ä:
 üö® –ê–õ–ï–†–¢: –†–µ–∑–∫–∏–π —Ä–æ—Å—Ç —Ü–µ–Ω—ã! üöÄ

–¢–æ–∫–µ–Ω: BTC  
–ó–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–µ 24 —á–∞—Å–∞: +7.2% (—Å 58,500 USDT –¥–æ 62,700 USDT)  
–¢–µ–∫—É—â–∞—è —Ü–µ–Ω–∞: 62,700 USDT  
–í–æ–ª–∞—Ç–∏–ª—å–Ω–æ—Å—Ç—å: –í—ã—Å–æ–∫–∞—è (–¥–∏–∞–ø–∞–∑–æ–Ω: 57,800 - 63,200 USDT)  
AI-–ø—Ä–æ–≥–Ω–æ–∑: –û–∂–∏–¥–∞–µ—Ç—Å—è –¥–∞–ª—å–Ω–µ–π—à–∏–π —Ä–æ—Å—Ç –¥–æ 65,000 USDT –≤ –±–ª–∏–∂–∞–π—à–∏–µ 12 —á–∞—Å–æ–≤ —Å –≤–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å—é 68%. –í–æ–∑–º–æ–∂–µ–Ω –æ—Ç–∫–∞—Ç –Ω–∞ 5-8% –ø—Ä–∏ –Ω–µ–≥–∞—Ç–∏–≤–Ω—ã—Ö –Ω–æ–≤–æ—Å—Ç—è—Ö.  
–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è: –ö—É–ø–∏—Ç—å –Ω–∞ —Å—É–º–º—É –¥–æ 15% –æ—Ç –ø–æ—Ä—Ç—Ñ–µ–ª—è, —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Å—Ç–æ–ø-–ª–æ—Å—Å –Ω–∞ -3%. –ü—Ä–æ–≤–µ—Ä—å —Ä–∏—Å–∫–∏ rug-pull: –ù–µ—Ç –ø–æ–¥–æ–∑—Ä–µ–Ω–∏–π (–ª–∏–∫–≤–∏–¥–Ω–æ—Å—Ç—å –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–∞)
*–î–∞–Ω–Ω—ã–µ –Ω–∞ 26 –∞–≤–≥—É—Å—Ç–∞ 2025. –ù–µ —Ñ–∏–Ω–∞–Ω—Å–æ–≤—ã–π —Å–æ–≤–µ—Ç ‚Äî —Ç–æ—Ä–≥—É–π –Ω–∞ —Å–≤–æ–π —Ä–∏—Å–∫!*
–ø–µ—Ä–µ–Ω–æ—Å—ã —Å—Ç—Ä–æ–∫–∏ –¥–µ–ª–∞–π , –Ω–∞–ø—Ä–∏–º–µ—Ä, \+n
"""
}


def request(content):
    completion = client.chat.completions.create(
        model="gpt-4.1-nano",
        messages=[global_rule,
                  {"role": "user", "content": content}
                  ],
    )
    raw_response = completion.choices[0].message.content
    logger.info(f"Raw response from AI: {raw_response}")

    cleaned_response = clean_json_response(raw_response)
    if not cleaned_response:
        logger.error("Empty response after cleaning")
        return '{"error": "Empty response after cleaning"}'

    logger.info(f"Cleaned response from AI: {cleaned_response}")

    # –ü–∞—Ä—Å–∏–º JSON –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –≤–∞–ª–∏–¥–Ω–æ—Å—Ç–∏
    parsed_data = safe_json_parse(cleaned_response)
    logger.info(f"Parsed response from AI: {parsed_data}")

    if parsed_data:
        return json.dumps(parsed_data, ensure_ascii=False)
    else:
        return '{"error": "Invalid JSON response from AI"}'